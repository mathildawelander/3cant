{"version":3,"sources":["Components/Tasktoggle.js","Components/TheButtons.js","App.js","reportWebVitals.js","index.js"],"names":["buttonStyle","backgroundColor","shadow","border","Tasktoggle","question","active","useState","activetask","setActive","class","style","onClick","TheButtons","onInput","task","data","App","className","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dce54693.chunk.js","sourcesContent":["import './Home.css';\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nconst buttonStyle = {\r\n    //color: \"#cd5b5f\",\r\n    backgroundColor: \"black\" ,\r\n    shadow: \"0 10px 10px 0 rgba(121, 81, 112, 0.568), 0 10px 10px 0 rgba(136, 85, 125, 0.19)\",\r\n    border:\" 1px solid black\"\r\n}\r\n\r\n\r\n\r\nconst Tasktoggle = ({question, active}) => {\r\n    const [activetask, setActive] = useState(0);\r\n\r\n    \r\n    return (\r\n        <div>\r\n            {\r\n                (activetask ===1)?\r\n                ( <div class=\"Thetask\" style={buttonStyle } onClick={()=>setActive(0)} > \r\n                {question} </div>):\r\n                ( <div class=\"Thetask\"  onClick={()=>setActive(1)} > \r\n                 {question}</div>)\r\n            }\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Tasktoggle","import './Home.css';\r\nimport React, { useState } from \"react\";\r\nimport Tasktoggle from './Tasktoggle'\r\n\r\nconst TheButtons = ({ onInput, task }) => {\r\n\r\n  \r\n  return (\r\n    <div class=\"TheButtons\">\r\n      \r\n      <div class =\"thefirst\">\r\n <Tasktoggle  question={task[0].question} active={0}  >  </Tasktoggle> \r\n <Tasktoggle  question={task[1].question} active={0}  >  </Tasktoggle> \r\n <Tasktoggle  question={task[2].question} active={0}  >  </Tasktoggle> \r\n <Tasktoggle  question={task[3].question} active={0}  >  </Tasktoggle> \r\n  </div>\r\n\r\n      \r\n      <div class =\"thesec\">\r\n      <Tasktoggle  question={task[4].question} active={0}  >  </Tasktoggle> \r\n      <Tasktoggle  question={task[5].question} active={0}  >  </Tasktoggle> \r\n      <Tasktoggle  question={task[6].question} active={0}  >  </Tasktoggle> \r\n      <Tasktoggle  question={task[7].question} active={0}  >  </Tasktoggle> \r\n  </div>\r\n\r\n      \r\n      <div class =\"thethr\">\r\n      <Tasktoggle  question={task[8].question} active={0}  >  </Tasktoggle> \r\n      <Tasktoggle  question={task[9].question} active={0}  >  </Tasktoggle> \r\n      <Tasktoggle  question={task[10].question} active={0}  >  </Tasktoggle> \r\n      <Tasktoggle  question={task[11].question} active={0}  >  </Tasktoggle> \r\n  </div>\r\n\r\n      \r\n      <div class =\"thefou\">\r\n      <Tasktoggle  question={task[12].question} active={0}  >  </Tasktoggle> \r\n      <Tasktoggle  question={task[13].question} active={0}  >  </Tasktoggle> \r\n      <Tasktoggle  question={task[14].question} active={0}  >  </Tasktoggle> \r\n      <Tasktoggle  question={task[15].question} active={0}  >  </Tasktoggle> \r\n \r\n      </div>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\nexport default TheButtons;","import './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n} from \"react-router-dom\";\nimport TheButtons from './Components/TheButtons.js';\nimport React, { useState } from \"react\";\n\n\nvar data= [\n{\n  question: 'Sök 3Cant',\n  active: 0\n},\n{\n  question: 'Ta på en rolig hatt',\n  active: 0\n},\n{\n  question: 'Drick fulvin',\n  active: 0\n},\n{\n  question: 'Utbring en gemensam skål!',\n  active: 0\n},\n{\n  question: 'Ta reda på någons namn som för dig är okänt',\n  active: 0\n},\n{\n  question: 'Utmana någon på sten, sax, påse',\n  active: 0\n},\n{\n  question: 'Drick ett glas vatten',\n  active: 0\n},\n{\n  question: 'Vinn över en i 3Cant på häfv',\n  active: 0\n},\n{\n  question: 'Kör varje spel minst 1 gång',\n  active: 0\n},\n{\n  question: 'Kom top 3 på kahoot',\n  active: 0\n},\n{\n  question: 'Gör en synkad dans med minst 1 person(VISA)',\n  active: 0\n},\n{\n  question: 'Gör draken',\n  active: 0\n},\n{\n  question: 'Starta en snapsvisa',\n  active: 0\n},\n{\n  question: 'Hitta Rosa Cantén',\n  active: 0\n}\n,\n{\n  question: 'Sjung karaoke',\n  active: 0\n},\n{\n  question: 'Nominera någon till 3Cant',\n  active: 0\n}\n\n\n];\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <h1> 3Cants bingo! </h1>\n     \n      <header className=\"App-header\">\n      </header>\n      <Router>\n        <Switch>\n          <Route path=\"\">\n            <TheButtons task= {data}/>\n          </Route>\n          </Switch> \n      </Router>\n    \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}